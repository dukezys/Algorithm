/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
 
//普通方法：使用ArrayList遍历存储，然后进行排序，再遍历一遍赋值
//时间复杂度O(n)，空间复杂度O(n)，需要注意的是重写Comparator时需要将>，<以及=的情况都考虑到
class Solution {
    public ListNode sortList(ListNode head) {
        ArrayList<Integer> list = new ArrayList<>();
        ListNode curr = head;
        while(curr != null){
            list.add(curr.val);
            curr = curr.next;
        }
        list.sort(new Comparator<Integer>(){
            public int compare(Integer i1, Integer i2){
                int o1 = (int)i1;
                int o2 = (int)i2;
                if(o1-o2 > 0)
                    return 1;
                if(o1-o2 < 0) 
                    return -1;
                return 0;
            }
            
        });
        curr = head;
        int n = 0;
        while(curr != null){
            curr.val = list.get(n);
            n++;
            curr = curr.next;
        }
        
        return head;
    }
}
